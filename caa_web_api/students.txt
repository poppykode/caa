# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from django.db import models


class ApplicationFee(models.Model):
    created = models.CharField(max_length=191)
    payment_mode = models.CharField(max_length=191)
    username = models.CharField(unique=True, max_length=191)
    finished = models.CharField(max_length=191)

    class Meta:
        managed = False
        db_table = 'application_fee'


class Bursary(models.Model):
    username = models.CharField(max_length=41)
    title = models.CharField(max_length=32)
    surname = models.CharField(max_length=30)
    initials = models.CharField(max_length=12)
    national_id = models.CharField(max_length=30)
    relation = models.CharField(max_length=50)
    address = models.TextField()
    cellphone = models.CharField(max_length=50)
    telephone_w = models.CharField(max_length=50)
    telephone_h = models.CharField(max_length=50)
    email_address = models.CharField(max_length=50)
    f_occ = models.CharField(max_length=50)
    m_occ = models.CharField(max_length=50)
    path1 = models.TextField()
    path2 = models.TextField()
    path3 = models.TextField()

    class Meta:
        managed = False
        db_table = 'bursary'


class Documents(models.Model):
    username = models.CharField(max_length=120)
    path = models.CharField(max_length=300)
    extra = models.CharField(max_length=120)

    class Meta:
        managed = False
        db_table = 'documents'


class First(models.Model):
    username = models.CharField(unique=True, max_length=220)
    password = models.CharField(max_length=120)
    enrolment_type = models.CharField(max_length=120)
    classes = models.CharField(max_length=120)

    class Meta:
        managed = False
        db_table = 'first'


class Progress(models.Model):
    username = models.CharField(unique=True, max_length=120)
    progress = models.CharField(max_length=120)
    date = models.CharField(max_length=120)
    status = models.CharField(max_length=120)
    sys_date = models.CharField(max_length=20)
    end_date = models.CharField(max_length=120)
    result = models.CharField(max_length=200)
    mycaa = models.CharField(max_length=30)

    class Meta:
        managed = False
        db_table = 'progress'


class RegNumbers(models.Model):
    student_number = models.CharField(unique=True, max_length=6)
    entry_mode = models.CharField(max_length=255)
    username = models.CharField(max_length=255)
    old_student_numbers = models.CharField(max_length=11)
    date = models.DateTimeField()

    class Meta:
        managed = False
        db_table = 'reg_numbers'


class Sectionb(models.Model):
    first_name = models.CharField(max_length=120)
    last_name = models.CharField(max_length=120)
    dob = models.CharField(max_length=20)
    duty = models.TextField()
    position = models.CharField(max_length=120)
    org_name = models.CharField(max_length=120)
    qualification = models.TextField()
    year = models.CharField(max_length=120)
    institution = models.CharField(max_length=200)
    qualification1 = models.TextField()
    institution1 = models.CharField(max_length=120)
    year1 = models.CharField(max_length=120)
    institute11 = models.TextField()
    year11 = models.TextField()
    qualification11 = models.TextField()
    institute12 = models.TextField()
    year12 = models.TextField()
    qualification12 = models.TextField()
    institute13 = models.TextField()
    year13 = models.TextField()
    qualification13 = models.TextField()
    institute14 = models.TextField()
    year14 = models.TextField()
    qualification14 = models.TextField()
    prev_org_name = models.CharField(max_length=200)
    prev_position = models.CharField(max_length=200)
    prev_duty = models.TextField()
    cell_number = models.CharField(max_length=120)
    address = models.CharField(max_length=120)
    email_address = models.CharField(unique=True, max_length=120)
    country = models.CharField(max_length=120)
    gender = models.CharField(max_length=120)
    username = models.CharField(max_length=120)
    id_number = models.CharField(max_length=50)
    next_fullname = models.CharField(max_length=300)
    next_relation = models.CharField(max_length=300)
    next_num = models.CharField(max_length=300)
    next_email_address = models.CharField(max_length=300)
    disability = models.CharField(max_length=300)
    dis_details = models.CharField(max_length=300)
    town = models.CharField(max_length=300)
    payer = models.CharField(max_length=300)
    payee_name = models.CharField(max_length=300)
    payee_number = models.CharField(max_length=300)
    payee_email = models.CharField(max_length=300)

    class Meta:
        managed = False
        db_table = 'sectionb'


class StudentNumbers(models.Model):
    enrolment_type = models.CharField(max_length=200)
    classes = models.CharField(max_length=300)
    starting_point = models.CharField(max_length=200)
    marker = models.CharField(max_length=200)

    class Meta:
        managed = False
        db_table = 'student_numbers'


class Temp(models.Model):
    email = models.CharField(max_length=40)
    response = models.CharField(max_length=199)
    enrolment_type = models.CharField(max_length=199)
    fullname = models.CharField(max_length=199)

    class Meta:
        managed = False
        db_table = 'temp'
